{"version":3,"file":"europa.js","sources":["../../europa-core/src/util/Utilities.js","../../europa-core/src/Conversion.js","../../europa-core/src/util/DOMUtilities.js","../../europa-core/src/option/Option.js","../../europa-core/src/option/OptionParser.js","../../europa-core/src/plugin/Plugin.js","../../europa-core/src/service/ServiceManager.js","../../europa-core/src/Europa.js","../../europa-core/src/plugin/predefined/AnchorPlugin.js","../../europa-core/src/plugin/predefined/BlockQuotePlugin.js","../../europa-core/src/plugin/predefined/BreakPlugin.js","../../europa-core/src/plugin/predefined/CodePlugin.js","../../europa-core/src/plugin/predefined/DefinitionTermPlugin.js","../../europa-core/src/plugin/predefined/DetailsPlugin.js","../../europa-core/src/plugin/predefined/EmphasisPlugin.js","../../europa-core/src/plugin/predefined/EmptyPlugin.js","../../europa-core/src/plugin/predefined/FramePlugin.js","../../europa-core/src/plugin/predefined/HeadingPlugin.js","../../europa-core/src/plugin/predefined/HorizontalRulePlugin.js","../../europa-core/src/plugin/predefined/ImagePlugin.js","../../europa-core/src/plugin/predefined/ListItemPlugin.js","../../europa-core/src/plugin/predefined/OrderedListPlugin.js","../../europa-core/src/plugin/predefined/ParagraphPlugin.js","../../europa-core/src/plugin/predefined/PreformattedPlugin.js","../../europa-core/src/plugin/predefined/QuotePlugin.js","../../europa-core/src/plugin/predefined/StrongPlugin.js","../../europa-core/src/plugin/predefined/UnorderedListPlugin.js","../../europa-core/src/index.js","../../europa-core/src/service/Service.js","../../europa-core/src/service/window/WindowService.js","../src/service/window/BrowserWindowService.js","../src/Europa.js"],"sourcesContent":["/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Contains utility methods that are useful throughout the library.\n *\n * @public\n */\nclass Utilities {\n\n  /**\n   * Iterates over own (not inherited) enumerable properties on the specified <code>object</code>.\n   *\n   * Nothing happens if <code>object</code> is <code>null</code>.\n   *\n   * @param {?Object} object - the object whose own properties are to be iterated over\n   * @param {Utilities~ForOwnCallback} callback - the function to be called with the value and key for each own property\n   * on <code>object</code>\n   * @param {Object} [context] - the value to use <code>this</code> when executing <code>callback</code>\n   * @return {void}\n   * @public\n   */\n  static forOwn(object, callback, context) {\n    if (!object) {\n      return;\n    }\n\n    for (const key in object) {\n      if (Utilities.hasOwn(object, key)) {\n        callback.call(context, object[key], key, object);\n      }\n    }\n  }\n\n  /**\n   * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n   * (not inherited) property.\n   *\n   * @param {Object} object - the object on which the property is to be checked\n   * @param {string} name - the name of the property to be checked\n   * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n   * @public\n   */\n  static hasOwn(object, name) {\n    return Object.prototype.hasOwnProperty.call(object, name);\n  }\n\n  /**\n   * Left pads the <code>string</code> provided with the given padding string for the specified number of\n   * <code>times</code>.\n   *\n   * @param {string} [string=\"\"] - the string to be padded\n   * @param {number} [times=0] - the number of times to pad <code>string</code>\n   * @param {string} [padding=\" \"] - the padding string\n   * @return {string} The padded <code>string</code>.\n   * @public\n   */\n  static leftPad(string, times, padding) {\n    if (string == null) {\n      string = '';\n    }\n    if (times == null) {\n      times = 0;\n    }\n    if (padding == null) {\n      padding = ' ';\n    }\n    if (!padding) {\n      return string;\n    }\n\n    for (let i = 0; i < times; i++) {\n      string = padding + string;\n    }\n\n    return string;\n  }\n\n}\n\nmodule.exports = Utilities;\n\n/**\n * Called for each own enumerable property on <code>object</code>.\n *\n * @callback Utilities~ForOwnCallback\n * @param {*} value - the value of the property\n * @param {string} key - the name of the property\n * @param {Object} object - the object to which the property belongs\n * @return {void}\n */\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Utilities = require('./util/Utilities');\n\nconst replacements = {\n  '\\\\\\\\': '\\\\\\\\',\n  '\\\\[': '\\\\[',\n  '\\\\]': '\\\\]',\n  '>': '\\\\>',\n  '_': '\\\\_',\n  '\\\\*': '\\\\*',\n  '`': '\\\\`',\n  '#': '\\\\#',\n  '([0-9])\\\\.(\\\\s|$)': '$1\\\\.$2',\n  '\\u00a9': '(c)',\n  '\\u00ae': '(r)',\n  '\\u2122': '(tm)',\n  '\\u00a0': ' ',\n  '\\u00b7': '\\\\*',\n  '\\u2002': ' ',\n  '\\u2003': ' ',\n  '\\u2009': ' ',\n  '\\u2018': '\\'',\n  '\\u2019': '\\'',\n  '\\u201c': '\"',\n  '\\u201d': '\"',\n  '\\u2026': '...',\n  '\\u2013': '--',\n  '\\u2014': '---'\n};\nconst replacementsRegExp = {};\n\nUtilities.forOwn(replacements, (value, key) => {\n  replacementsRegExp[key] = new RegExp(key, 'g');\n});\n\n/**\n * Contains contextual information for a single conversion process.\n *\n * @param {Europa} europa - the {@link Europa} instance responsible for this conversion\n * @param {Europa~Options} options - the options to be used\n * @public\n */\nclass Conversion {\n\n  constructor(europa, options) {\n    /**\n     * The {@link Europa} instance responsible for this {@link Conversion}.\n     *\n     * @public\n     * @type {Europa}\n     */\n    this.europa = europa;\n\n    /**\n     * The options for this {@link Conversion}.\n     *\n     * @public\n     * @type {Europa~Options}\n     */\n    this.options = options;\n\n    /**\n     * Whether the buffer is at the start of the current line.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atLeft = true;\n\n    /**\n     * Whether any white space should be removed from the start of the next output.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atNoWhiteSpace = true;\n\n    /**\n     * Whether the buffer is at the start of a paragraph.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.atParagraph = true;\n\n    /**\n     * The conversion output buffer to which the Markdown will be written.\n     *\n     * @public\n     * @type {string}\n     */\n    this.buffer = '';\n\n    /**\n     * The context for this {@link Conversion}.\n     *\n     * @public\n     * @type {Object.<string, *>}\n     */\n    this.context = {};\n\n    /**\n     * Whether the buffer is currently within a code block.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inCodeBlock = false;\n\n    /**\n     * Whether the buffer is currently within an ordered list.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inOrderedList = false;\n\n    /**\n     * Whether the buffer is currently within a preformatted block.\n     *\n     * @public\n     * @type {boolean}\n     */\n    this.inPreformattedBlock = false;\n\n    /**\n     * The last string to be output next to the buffer.\n     *\n     * @public\n     * @type {string}\n     */\n    this.last = null;\n\n    /**\n     * The start of the current line.\n     *\n     * @public\n     * @type {string}\n     */\n    this.left = '\\n';\n\n    /**\n     * The depth of nested lists.\n     *\n     * @public\n     * @type {number}\n     */\n    this.listDepth = 0;\n\n    /**\n     * The one-based index for the current list item within the current list.\n     *\n     * @public\n     * @type {number}\n     */\n    this.listIndex = 1;\n\n    this._document = europa.document;\n    this._element = null;\n    this._tagName = null;\n    this._window = europa.window;\n  }\n\n  /**\n   * Appends the last output string to the buffer and then queues the specified <code>string</code> to be output.\n   *\n   * @param {string} string - the string to be appended\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  append(string) {\n    if (this.last != null) {\n      this.buffer += this.last;\n    }\n\n    this.last = string;\n\n    return this;\n  }\n\n  /**\n   * Appends a paragraph to the output buffer.\n   *\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  appendParagraph() {\n    if (this.atParagraph) {\n      return this;\n    }\n\n    if (!this.atLeft) {\n      this.append(this.left);\n\n      this.atLeft = true;\n    }\n\n    this.append(this.left);\n\n    this.atNoWhiteSpace = true;\n    this.atParagraph = true;\n\n    return this;\n  }\n\n  /**\n   * Outputs the specified <code>string</code> to the buffer.\n   *\n   * Optionally, <code>string</code> can be \"cleaned\" before being output. Doing so will replace any certain special\n   * characters as well as some white space.\n   *\n   * @param {string} string - the string to be output\n   * @param {boolean} [clean=false] - <code>true</code> to clean <code>string</code>; otherwise <code>false</code>\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  output(string, clean) {\n    if (!string) {\n      return this;\n    }\n\n    string = string.replace(/\\r\\n/g, '\\n');\n\n    if (clean) {\n      string = string.replace(/\\n([ \\t]*\\n)+/g, '\\n')\n        .replace(/\\n[ \\t]+/g, '\\n')\n        .replace(/[ \\t]+/g, ' ');\n\n      Utilities.forOwn(replacements, (value, key) => {\n        string = string.replace(replacementsRegExp[key], value);\n      });\n    }\n\n    if (!this.inPreformattedBlock) {\n      if (this.atNoWhiteSpace) {\n        string = string.replace(/^[ \\t\\n]+/, '');\n      } else if (/^[ \\t]*\\n/.test(string)) {\n        string = string.replace(/^[ \\t\\n]+/, '\\n');\n      } else {\n        string = string.replace(/^[ \\t]+/, ' ');\n      }\n    }\n\n    if (!string) {\n      return this;\n    }\n\n    this.atLeft = /\\n$/.test(string);\n    this.atNoWhiteSpace = /[ \\t\\n]$/.test(string);\n    this.atParagraph = /\\n{2}$/.test(string);\n\n    return this.append(string.replace(/\\n/g, this.left));\n  }\n\n  /**\n   * Replaces the start of the current line with the <code>string</code> provided.\n   *\n   * @param {string} string - the string to replace the start of the current line\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   */\n  replaceLeft(string) {\n    if (!this.atLeft) {\n      this.append(this.left.replace(/[ ]{2,4}$/, string));\n\n      this.atLeft = true;\n      this.atNoWhiteSpace = true;\n      this.atParagraph = true;\n    } else if (this.last) {\n      this.last = this.last.replace(/[ ]{2,4}$/, string);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the current document for this {@link Conversion}.\n   *\n   * This may not be the same document as is associated with the {@link Europa} instance as this document may be\n   * nested (e.g. a frame).\n   *\n   * @return {?Document} The current document.\n   * @public\n   */\n  get document() {\n    return this._document;\n  }\n\n  /**\n   * Returns the current element for this {@link Conversion}.\n   *\n   * @return {?Element} The current element.\n   * @public\n   */\n  get element() {\n    return this._element;\n  }\n\n  /**\n   * Sets the current element for this {@link Conversion} to <code>element</code>.\n   *\n   * @param {?Element} element - the current element to be set\n   * @return {void}\n   * @public\n   */\n  set element(element) {\n    this._element = element;\n    this._tagName = element && element.tagName ? element.tagName.toLowerCase() : null;\n  }\n\n  /**\n   * Returns the name of the tag for the current element for this {@link Conversion}.\n   *\n   * The tag name will always be in lower case, when available.\n   *\n   * @return {?string} The current element's tag name.\n   * @public\n   */\n  get tagName() {\n    return this._tagName;\n  }\n\n  /**\n   * Returns the current window for this {@link Conversion}.\n   *\n   * This may not be the same window as is associated with the {@link Europa} instance as this window may be nested\n   * (e.g. a frame).\n   *\n   * @return {?Window} The current window.\n   * @public\n   */\n  get window() {\n    return this._window;\n  }\n\n  /**\n   * Sets the current window for this {@link Conversion} to <code>window</code>.\n   *\n   * This may not be the same window as is associated with the {@link Europa} instance as this window may be nested\n   * (e.g. a frame).\n   *\n   * @param {?Window} window - the window to be set\n   * @return {void}\n   * @public\n   */\n  set window(window) {\n    this._window = window;\n    this._document = window ? window.document : null;\n  }\n\n}\n\nmodule.exports = Conversion;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Contains utility methods that are useful when dealing with the DOM.\n *\n * @public\n */\nclass DOMUtilities {\n\n  /**\n   * Checks whether the specified <code>element</code> is currently visible using the <code>window</code> provided.\n   *\n   * This is not a very sophisticated check and could easily be mistaken, but it should catch a lot of the most simple\n   * cases.\n   *\n   * @param {Element} element - the element whose visibility is to be checked\n   * @param {Window} window - the window to be used\n   * @return {boolean} <code>true</code> if <code>element</code> is visible; otherwise <code>false</code>.\n   * @public\n   */\n  static isVisible(element, window) {\n    const style = window.getComputedStyle(element);\n\n    return style.getPropertyValue('display') !== 'none' && style.getPropertyValue('visibility') !== 'hidden';\n  }\n\n}\n\nmodule.exports = DOMUtilities;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Defines an available option.\n *\n * If <code>defaultValue</code> is a function, it will be called if/when needed and the return value will be used as the\n * default value. If the default value is to be a function itself, then <code>defaultValue</code> must return that\n * function.\n *\n * @param {string} name - the name to be used\n * @param {*} [defaultValue] - the default value to be used\n * @public\n */\nclass Option {\n\n  constructor(name, defaultValue) {\n    /**\n     * The name for this {@link Option}.\n     *\n     * @public\n     * @type {string}\n     */\n    this.name = name;\n\n    this._defaultValue = defaultValue;\n  }\n\n  /**\n   * Returns the default value for this {@link Option}.\n   *\n   * @return {*} The default value.\n   * @public\n   */\n  get defaultValue() {\n    const defaultValue = this._defaultValue;\n\n    return typeof defaultValue === 'function' ? defaultValue.call(this) : defaultValue;\n  }\n\n}\n\nmodule.exports = Option;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Manages multiple {@link Option} instances that are intended to be used by multiple implementations/instances.\n *\n * @param {Option[]} options - the options to be used\n * @public\n */\nclass OptionParser {\n\n  constructor(options) {\n    /**\n     * The available options for this {@link OptionParser}.\n     *\n     * @public\n     * @type {Option[]}\n     */\n    this.options = options;\n  }\n\n  /**\n   * Returns whether an option with the specified <code>name</code> is available.\n   *\n   * @param {string} name - the name of the {@link Option} whose existence is to be checked\n   * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n   * <code>false</code>.\n   * @public\n   */\n  exists(name) {\n    return this.options.some((option) => option.name === name);\n  }\n\n  /**\n   * Parses the specified <code>options</code>, extracting only properties that match valid options and applying default\n   * values where required.\n   *\n   * @param {Object} [options] - the options to be parsed\n   * @return {Object.<string, *>} The parsed options.\n   * @public\n   */\n  parse(options) {\n    if (!options) {\n      options = {};\n    }\n\n    const result = {};\n\n    this.options.forEach((option) => {\n      const { name } = option;\n      const value = options[name] != null ? options[name] : option.defaultValue;\n\n      result[name] = value;\n    });\n\n    return result;\n  }\n\n}\n\nmodule.exports = OptionParser;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * A plugin that can tap into multiple parts in the conversion process while being specific to only a sub-set of tags.\n *\n * @public\n */\nclass Plugin {\n\n  /**\n   * Called after {@link Plugin#convert} <b>and</b> only once all children elements have been converted as well,\n   * provided they weren't skipped, and intended for tidying up after the conversion.\n   *\n   * <code>context</code> can be used to receive any state for a single element conversion from {@link Plugin#before}\n   * and {@link Plugin#convert}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @param {Object.<string, *>} context - the current context for this {@link Plugin}\n   * @return {void}\n   * @public\n   */\n  after(conversion, context) {}\n\n  /**\n   * Called before any elements are converted and intended to setup this {@link Plugin} initially.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @return {void}\n   * @public\n   */\n  afterAll(conversion) {}\n\n  /**\n   * Called immediately before {@link Plugin#convert} and intended for preparing this {@link Plugin} for conversion.\n   *\n   * <code>context</code> can be used to pass any state for a single element conversion to {@link Plugin#convert} and\n   * then to {@link Plugin#after}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @param {Object.<string, *>} context - the current context for this {@link Plugin}\n   * @return {void}\n   * @public\n   */\n  before(conversion, context) {}\n\n  /**\n   * Called after all elements have been converted and intended to completing any steps for this {@link Plugin}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @return {void}\n   * @public\n   */\n  beforeAll(conversion) {}\n\n  /**\n   * Converts the current element within the specified <code>conversion</code> which can be used to provide control over\n   * the conversion and returns whether the children of the element should be converted.\n   *\n   * <code>context</code> can be used to pass any state for a single element conversion from {@link Plugin#before} to\n   * {@link Plugin#after}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @param {Object.<string, *>} context - the current context for this {@link Plugin}\n   * @return {boolean} <code>true</code> if the children of the current element should be converted; otherwise\n   * <code>false</code>.\n   * @public\n   */\n  convert(conversion, context) {\n    return true;\n  }\n\n  /**\n   * Returns the names of tags with which this {@link Plugin} should be registered to handle.\n   *\n   * @return {string[]} The names of supported tags.\n   * @public\n   */\n  getTagNames() {\n    return [];\n  }\n\n}\n\nmodule.exports = Plugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * A basic manager for {@link Service} implementations that are mapped to simple names.\n *\n * @public\n */\nclass ServiceManager {\n\n  constructor() {\n    this._services = {};\n  }\n\n  /**\n   * Returns the {@link Service} being managed with the specified <code>name</code>.\n   *\n   * @param {string} name - the name of the {@link Service} to be returned\n   * @return {Service} The {@link Service} is being managed with <code>name</code>.\n   * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n   * @public\n   */\n  getService(name) {\n    const service = this._services[name];\n    if (!service) {\n      throw new Error(`Service is not being managed with name: ${name}`);\n    }\n\n    return service;\n  }\n\n  /**\n   * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n   * <code>service</code> provided.\n   *\n   * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n   * @param {Service} service - the {@link Service} implementation to be managed\n   * @return {void}\n   * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n   * @public\n   */\n  setService(name, service) {\n    if (this._services[name]) {\n      throw new Error(`Service is already managed with name: ${name}`);\n    }\n\n    if (service) {\n      this._services[name] = service;\n    }\n  }\n\n}\n\nmodule.exports = ServiceManager;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Conversion = require('./Conversion');\nconst DOMUtilities = require('./util/DOMUtilities');\nconst Option = require('./option/Option');\nconst OptionParser = require('./option/OptionParser');\nconst Plugin = require('./plugin/Plugin');\nconst ServiceManager = require('./service/ServiceManager');\nconst Utilities = require('./util/Utilities');\n\nconst plugins = {};\nconst serviceManager = new ServiceManager();\n\n/**\n * Enables configuration of a HTML to Markdown converter that supports HTML strings and DOM elements.\n *\n * @param {Europa~Options} [options] - the options to be used\n * @public\n */\nclass Europa {\n\n  /**\n   * A convient reference to {@link Plugin} exposed on {@link Europa} for cases where Europa Core is bundled.\n   *\n   * @return {Function} The {@link Plugin} constructor.\n   * @public\n   */\n  static get Plugin() {\n    return Plugin;\n  }\n\n  /**\n   * Registers the specified <code>plugin</code> to be used by all {@link Europa} instances.\n   *\n   * If <code>plugin</code> declares support for a tag name which already has a {@link Plugin} registered for it,\n   * <code>plugin</code> will replace the previously registered plugin, but only for conflicting tag names.\n   *\n   * @param {Plugin} plugin - the {@link Plugin} to be registered\n   * @return {void}\n   * @public\n   */\n  static register(plugin) {\n    plugin.getTagNames().forEach((tag) => {\n      plugins[tag] = plugin;\n    });\n  }\n\n  /**\n   * Configures the <code>service</code> provided to be used by all {@link Europa} instances.\n   *\n   * @param {Service} service - the {@link Service} to be configured\n   * @return {void}\n   * @throws {Error} If a {@link Service} has already been configured with the same name.\n   * @public\n   */\n  static use(service) {\n    serviceManager.setService(service.getName(), service);\n  }\n\n  constructor(options) {\n    this._options = new OptionParser([\n      new Option('absolute', false),\n      new Option('baseUri', () => serviceManager.getService('window').getDefaultBaseUri()),\n      new Option('inline', false)\n    ]).parse(options);\n    this._window = null;\n  }\n\n  /**\n   * Converts the specified <code>html</code> into Markdown based on the options configured for this {@link Europa}\n   * instance.\n   *\n   * <code>html</code> can either be an HTML string or a DOM element whose HTML contents are to be converted into\n   * Markdown.\n   *\n   * @param {?Element|?string} html - the HTML (or element whose inner HTML is) to be converted into Markdown\n   * @return {string} The Markdown converted from <code>html</code>.\n   * @public\n   */\n  convert(html) {\n    if (!html) {\n      return '';\n    }\n\n    const { document } = this;\n    let root;\n\n    if (typeof html === 'string') {\n      root = document.createElement('div');\n      root.innerHTML = html;\n    } else {\n      root = html;\n    }\n\n    const conversion = new Conversion(this, this._options);\n    let wrapper;\n\n    if (!document.contains(root)) {\n      wrapper = document.createElement('div');\n      wrapper.style.display = 'none';\n      wrapper.appendChild(root);\n\n      document.body.appendChild(wrapper);\n    }\n\n    try {\n      Utilities.forOwn(plugins, (plugin) => plugin.beforeAll(conversion));\n\n      this.convertElement(root, conversion);\n\n      Utilities.forOwn(plugins, (plugin) => plugin.afterAll(conversion));\n    } finally {\n      if (wrapper) {\n        document.body.removeChild(wrapper);\n\n        wrapper.removeChild(root);\n      }\n    }\n\n    return conversion.append('').buffer.trim();\n  }\n\n  /**\n   * Converts the specified <code>element</code> and it's children into Markdown using the <code>conversion</code>\n   * provided.\n   *\n   * Nothing happens if <code>element</code> is <code>null</code> or is invisible (simplified detection used).\n   *\n   * @param {?Element} element - the element (along well as it's children) to be converted into Markdown\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @return {void}\n   * @public\n   */\n  convertElement(element, conversion) {\n    if (!element) {\n      return;\n    }\n\n    const { window } = this;\n\n    if (element.nodeType === window.Node.ELEMENT_NODE) {\n      if (!DOMUtilities.isVisible(element, window)) {\n        return;\n      }\n\n      conversion.element = element;\n\n      const context = {};\n      const plugin = plugins[conversion.tagName];\n      let convertChildren = true;\n\n      if (plugin) {\n        plugin.before(conversion, context);\n        convertChildren = plugin.convert(conversion, context);\n      }\n\n      if (convertChildren) {\n        for (let i = 0; i < element.childNodes.length; i++) {\n          this.convertElement(element.childNodes[i], conversion);\n        }\n      }\n\n      if (plugin) {\n        plugin.after(conversion, context);\n      }\n    } else if (element.nodeType === window.Node.TEXT_NODE) {\n      const value = element.nodeValue || '';\n\n      if (conversion.inPreformattedBlock) {\n        conversion.output(value);\n      } else if (conversion.inCodeBlock) {\n        conversion.output(value.replace(/`/g, '\\\\`'));\n      } else {\n        conversion.output(value, true);\n      }\n    }\n  }\n\n  /**\n   * Releases the window used by this {@link Europa} instance.\n   *\n   * This allows closeable {@link WindowService} implementations to close the window and free up resources. However,\n   * this instance can and will simply retrieve another window from the {@link WindowService} the next time it is\n   * required (i.e. {@link Europa#convert} is called).\n   *\n   * @return {Europa} A reference to this {@link Europa} for chaining purposes.\n   * @public\n   */\n  release() {\n    if (this._window) {\n      serviceManager.getService('window').closeWindow(this._window);\n\n      this._window = null;\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns the document to be used for HTML to Markdown conversion by this {@link Europa} instance.\n   *\n   * @return {Document} The document.\n   * @public\n   */\n  get document() {\n    return this.window.document;\n  }\n\n  /**\n   * Returns the window to be used for HTML to Markdown conversion by this {@link Europa} instance.\n   *\n   * @return {Window} The window.\n   * @public\n   */\n  get window() {\n    if (!this._window) {\n      this._window = serviceManager.getService('window').getWindow(this._options.baseUri);\n    }\n\n    return this._window;\n  }\n\n}\n\nmodule.exports = Europa;\n\n/**\n * The options used by {@link Europa}.\n *\n * @typedef {Object} Europa~Options\n * @property {boolean} [absolute=false] - Whether absolute URLS should be used for anchors/images.\n * @property {string} [baseUri] - The base URI for the window. This is ignored in environments where the base URI cannot\n * be changed.\n * @property {boolean} [inline=false] - Whether anchor/image URLs are to be inserted inline.\n */\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which extracts the URL from an anchor. Anchors without an <code>href</code> are treated as plain\n * text.\n *\n * If the <code>absolute</code> option is enabled, then the URL extracted from the anchor will be absolute. Otherwise,\n * the URL will be exactly as it is in the <code>href</code> attribute.\n *\n * If the <code>inline</code> option is enabled, then the URL (and any <code>title</code> on the anchor) will be\n * inserted immediately after the anchor contents (e.g. <code>[foo](/bar)</code>). Otherwise, all unique URL and title\n * combinations will be indexed (e.g. <code>[foo][anchor0]</code>) and the references will be output at the very end.\n *\n * @public\n */\nclass AnchorPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    if (context.value != null) {\n      conversion.output(`]${context.value}`);\n    }\n  }\n\n  /**\n   * @override\n   */\n  afterAll(conversion) {\n    const { anchors } = conversion.context;\n    if (!anchors.length) {\n      return;\n    }\n\n    conversion.append('\\n\\n');\n\n    for (let i = 0; i < anchors.length; i++) {\n      conversion.append(`[anchor${i}]: ${anchors[i]}\\n`);\n    }\n  }\n\n  /**\n   * @override\n   */\n  beforeAll(conversion) {\n    conversion.context.anchorMap = {};\n    conversion.context.anchors = [];\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const { element, options } = conversion;\n    const href = options.absolute ? element.href : element.getAttribute('href');\n    if (!href) {\n      return true;\n    }\n\n    const { anchorMap, anchors } = conversion.context;\n    const title = element.getAttribute('title');\n    const value = title ? `${href} \"${title}\"` : href;\n    let index;\n\n    if (options.inline) {\n      context.value = `(${value})`;\n    } else {\n      index = anchorMap[value];\n      if (index == null) {\n        index = anchors.push(value) - 1;\n\n        anchorMap[value] = index;\n      }\n\n      context.value = `[anchor${index}]`;\n    }\n\n    conversion.output('[');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'a' ];\n  }\n\n}\n\nEuropa.register(new AnchorPlugin());\n\nmodule.exports = AnchorPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents in a block quote.\n *\n * @public\n */\nclass BlockQuotePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.atLeft = false;\n    conversion.atParagraph = false;\n    conversion.left = context.previousLeft;\n\n    conversion.appendParagraph();\n  }\n\n  /**\n   * @override\n   */\n  before(conversion, context) {\n    context.previousLeft = conversion.left;\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const value = '> ';\n\n    conversion.left += value;\n\n    if (conversion.atParagraph) {\n      conversion.append(value);\n    } else {\n      conversion.appendParagraph();\n    }\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [\n      'blockquote',\n      'dd'\n    ];\n  }\n\n}\n\nEuropa.register(new BlockQuotePlugin());\n\nmodule.exports = BlockQuotePlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs an inline line break.\n *\n * @public\n */\nclass BreakPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    conversion.append(`  ${conversion.left}`);\n\n    conversion.atLeft = true;\n    conversion.atNoWhiteSpace = true;\n\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'br' ];\n  }\n\n}\n\nEuropa.register(new BreakPlugin());\n\nmodule.exports = BreakPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents in a code block.\n *\n * @public\n */\nclass CodePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    if (!context.skipped) {\n      conversion.inCodeBlock = context.previousInCodeBlock;\n\n      conversion.output('`');\n    }\n  }\n\n  /**\n   * @override\n   */\n  before(conversion, context) {\n    context.previousInCodeBlock = conversion.inCodeBlock;\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    if (conversion.inPreformattedBlock) {\n      context.skipped = true;\n    } else {\n      conversion.output('`');\n\n      conversion.inCodeBlock = true;\n    }\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [\n      'code',\n      'kbd',\n      'samp'\n    ];\n  }\n\n}\n\nEuropa.register(new CodePlugin());\n\nmodule.exports = CodePlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a definition term as strong text.\n *\n * @public\n */\nclass DefinitionTermPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.output('**');\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    conversion.appendParagraph();\n\n    conversion.output('**');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'dt' ];\n  }\n\n}\n\nEuropa.register(new DefinitionTermPlugin());\n\nmodule.exports = DefinitionTermPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a details section.\n *\n * If the details has an <code>open</code> attribute then all of its children are converted. Otherwise, only the nested\n * <code>summary</code>, if any, will be converted.\n *\n * @public\n */\nclass DetailsPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const { element } = conversion;\n\n    conversion.appendParagraph();\n\n    if (element.hasAttribute('open')) {\n      return true;\n    }\n\n    const summary = element.querySelector('summary');\n    conversion.europa.convertElement(summary, conversion);\n\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'details' ];\n  }\n\n}\n\nEuropa.register(new DetailsPlugin());\n\nmodule.exports = DetailsPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs as emphasised text.\n *\n * @public\n */\nclass EmphasisPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.output('_');\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    conversion.output('_');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [\n      'cite',\n      'dfn',\n      'em',\n      'i',\n      'u',\n      'var'\n    ];\n  }\n\n}\n\nEuropa.register(new EmphasisPlugin());\n\nmodule.exports = EmphasisPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which simply ensures that no children elements are converted.\n *\n * @public\n */\nclass EmptyPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [\n      'applet',\n      'area',\n      'audio',\n      'button',\n      'canvas',\n      'datalist',\n      'embed',\n      'head',\n      'input',\n      'map',\n      'menu',\n      'meter',\n      'noframes',\n      'noscript',\n      'object',\n      'optgroup',\n      'option',\n      'param',\n      'progress',\n      'rp',\n      'rt',\n      'ruby',\n      'script',\n      'select',\n      'style',\n      'textarea',\n      'title',\n      'video'\n    ];\n  }\n\n}\n\nEuropa.register(new EmptyPlugin());\n\nmodule.exports = EmptyPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents of nested frame.\n *\n * @public\n */\nclass FramePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.window = context.previousWindow;\n  }\n\n  /**\n   * @override\n   */\n  before(conversion, context) {\n    context.previousWindow = conversion.window;\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const window = conversion.element.contentWindow;\n\n    if (window) {\n      conversion.window = window;\n\n      conversion.europa.convertElement(window.document.body, conversion);\n    }\n\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'frame', 'iframe' ];\n  }\n\n}\n\nEuropa.register(new FramePlugin());\n\nmodule.exports = FramePlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a heading of various levels.\n *\n * @public\n */\nclass HeadingPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const level = parseInt(conversion.tagName.match(/([1-6])$/)[1], 10);\n\n    conversion.appendParagraph();\n\n    let heading = '';\n    for (let i = 0; i < level; i++) {\n      heading += '#';\n    }\n\n    conversion.output(`${heading} `);\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6'\n    ];\n  }\n\n}\n\nEuropa.register(new HeadingPlugin());\n\nmodule.exports = HeadingPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a horizontal rule.\n *\n * @public\n */\nclass HorizontalRulePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    conversion\n      .appendParagraph()\n      .output('---')\n      .appendParagraph();\n\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'hr' ];\n  }\n\n}\n\nEuropa.register(new HorizontalRulePlugin());\n\nmodule.exports = HorizontalRulePlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which extracts the URL from an image.\n *\n * If the <code>absolute</code> option is enabled, then the URL extracted from the image will be absolute. Otherwise,\n * the URL will be exactly as it is in the <code>src</code> attribute.\n *\n * If the <code>inline</code> option is enabled, then the URL will be inserted immediately after the <code>alt</code> on\n * the image (e.g. <code>![foo](/bar.png)</code>). Otherwise, all unique URLs will be indexed\n * (e.g. <code>![foo][image0]</code>) and the references will be output at the very end.\n *\n * @public\n */\nclass ImagePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  afterAll(conversion) {\n    const { images } = conversion.context;\n    if (!images.length) {\n      return;\n    }\n\n    conversion.append('\\n\\n');\n\n    for (let i = 0; i < images.length; i++) {\n      conversion.append(`[image${i}]: ${images[i]}\\n`);\n    }\n  }\n\n  /**\n   * @override\n   */\n  beforeAll(conversion) {\n    conversion.context.imageMap = {};\n    conversion.context.images = [];\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const { element, options } = conversion;\n    const source = options.absolute ? element.src : element.getAttribute('src');\n    if (!source) {\n      return false;\n    }\n\n    const alternativeText = element.getAttribute('alt') || '';\n    const { imageMap, images } = conversion.context;\n    const title = element.getAttribute('title');\n    let value = title ? `${source} \"${title}\"` : source;\n    let index;\n\n    if (options.inline) {\n      value = `(${value})`;\n    } else {\n      index = imageMap[value];\n      if (index == null) {\n        index = images.push(value) - 1;\n\n        imageMap[value] = index;\n      }\n\n      value = `[image${index}]`;\n    }\n\n    conversion.output(`![${alternativeText}]${value}`);\n\n    return false;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'img' ];\n  }\n\n}\n\nEuropa.register(new ImagePlugin());\n\nmodule.exports = ImagePlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\nconst Utilities = require('../../util/Utilities');\n\n/**\n * A {@link Plugin} which outputs a list item. The prefix for the list item will vary depending on what type of list the\n * item is contained within.\n *\n * @public\n */\nclass ListItemPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const value = conversion.inOrderedList ? `${conversion.listIndex++}. ` : '* ';\n\n    if (!conversion.atLeft) {\n      conversion.append(conversion.left.replace(/[ ]{2,4}$/, '\\n'));\n\n      conversion.atLeft = true;\n      conversion.atNoWhiteSpace = true;\n      conversion.atParagraph = true;\n    } else if (conversion.last) {\n      conversion.last = conversion.last.replace(/[ ]{2,4}$/, '\\n');\n    }\n\n    conversion.append(Utilities.leftPad(value, (conversion.listDepth - 1) * 2));\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'li' ];\n  }\n\n}\n\nEuropa.register(new ListItemPlugin());\n\nmodule.exports = ListItemPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs an ordered list.\n *\n * @public\n */\nclass OrderedListPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.inOrderedList = context.previousInOrderedList;\n    conversion.listIndex = context.previousListIndex;\n    conversion.listDepth--;\n  }\n\n  /**\n   * @override\n   */\n  before(conversion, context) {\n    context.previousInOrderedList = conversion.inOrderedList;\n    context.previousListIndex = conversion.listIndex;\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    if (conversion.listDepth === 0) {\n      conversion.appendParagraph();\n    }\n\n    conversion.inOrderedList = true;\n    conversion.listIndex = 1;\n    conversion.listDepth++;\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'ol' ];\n  }\n\n}\n\nEuropa.register(new OrderedListPlugin());\n\nmodule.exports = OrderedListPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a paragraph.\n *\n * @public\n */\nclass ParagraphPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    conversion.appendParagraph();\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [\n      'address',\n      'article',\n      'aside',\n      'div',\n      'fieldset',\n      'footer',\n      'header',\n      'nav',\n      'p',\n      'section'\n    ];\n  }\n\n}\n\nEuropa.register(new ParagraphPlugin());\n\nmodule.exports = ParagraphPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents in a preformatted block.\n *\n * @public\n */\nclass PreformattedPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.atLeft = false;\n    conversion.atParagraph = false;\n    conversion.inPreformattedBlock = context.previousInPreformattedBlock;\n    conversion.left = context.previousLeft;\n\n    conversion.appendParagraph();\n  }\n\n  /**\n   * @override\n   */\n  before(conversion, context) {\n    context.previousInPreformattedBlock = conversion.inPreformattedBlock;\n    context.previousLeft = conversion.left;\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    const value = '    ';\n\n    conversion.left += value;\n\n    if (conversion.atParagraph) {\n      conversion.append(value);\n    } else {\n      conversion.appendParagraph();\n    }\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'pre' ];\n  }\n\n}\n\nEuropa.register(new PreformattedPlugin());\n\nmodule.exports = PreformattedPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs as quoted text.\n *\n * @public\n */\nclass QuotePlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.output('\"');\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    conversion.output('\"');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'q' ];\n  }\n\n}\n\nEuropa.register(new QuotePlugin());\n\nmodule.exports = QuotePlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs as strong text.\n *\n * @public\n */\nclass StrongPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.output('**');\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    conversion.output('**');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [\n      'b',\n      'strong'\n    ];\n  }\n\n}\n\nEuropa.register(new StrongPlugin());\n\nmodule.exports = StrongPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('../../Europa');\nconst Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs an unordered list.\n *\n * @public\n */\nclass UnorderedListPlugin extends Plugin {\n\n  /**\n   * @override\n   */\n  after(conversion, context) {\n    conversion.inOrderedList = context.previousInOrderedList;\n    conversion.listIndex = context.previousListIndex;\n    conversion.listDepth--;\n  }\n\n  /**\n   * @override\n   */\n  before(conversion, context) {\n    context.previousInOrderedList = conversion.inOrderedList;\n    context.previousListIndex = conversion.listIndex;\n  }\n\n  /**\n   * @override\n   */\n  convert(conversion, context) {\n    if (conversion.listDepth === 0) {\n      conversion.appendParagraph();\n    }\n\n    conversion.inOrderedList = false;\n    conversion.listIndex = 1;\n    conversion.listDepth++;\n\n    return true;\n  }\n\n  /**\n   * @override\n   */\n  getTagNames() {\n    return [ 'ul' ];\n  }\n\n}\n\nEuropa.register(new UnorderedListPlugin());\n\nmodule.exports = UnorderedListPlugin;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('./Europa');\nrequire('./plugin/preset/default');\n\nmodule.exports = Europa;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * Defines a service contract that must be met by all implementations.\n *\n * @public\n */\nclass Service {\n\n  /**\n   * Returns the name of this {@link Service}.\n   *\n   * @return {string} The service name.\n   * @public\n   * @abstract\n   */\n  getName() {}\n\n}\n\nmodule.exports = Service;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Service = require('../Service');\n\n/**\n * A service used to retrieve the window object for converting HTML to Markdown and, optionally, to close it upon\n * destruction of the {@link Europa} instance. This can be useful to free up resources as/when required in an artificial\n * browser environment.\n *\n * @public\n */\nclass WindowService extends Service {\n\n  /**\n   * Closes the specified <code>window</code> but only if this {@link WindowService} is closeable.\n   *\n   * @param {Window} window - the window to be closed\n   * @return {void}\n   * @public\n   */\n  closeWindow(window) {\n    if (this.isCloseable(window)) {\n      window.close();\n    }\n  }\n\n  /**\n   * Returns the default base URI for windows provided by this {@link WindowService}.\n   *\n   * Implementations of {@link WindowService} <b>must</b> override this method with their own specific logic.\n   *\n   * @return {string} The default base URI.\n   * @public\n   * @abstract\n   */\n  getDefaultBaseUri() {}\n\n  /**\n   * @override\n   */\n  getName() {\n    return 'window';\n  }\n\n  /**\n   * Returns a window to be used for converting HTML to Markdown using the base URI provided.\n   *\n   * It's important to note that the base URI cannot be changed in some environments, in which case <code>baseUri</code>\n   * will be ignored.\n   *\n   * Implementations of {@link WindowService} <b>must</b> override this method with their own specific logic.\n   *\n   * @param {string} baseUri - the base URI to be used\n   * @return {Window} The window.\n   * @public\n   * @abstract\n   */\n  getWindow(baseUri) {}\n\n  /**\n   * Returns whether the specified <code>window</code> which was retrieved by this {@link WindowService} is closeable.\n   *\n   * The default implementation of this method will always return <code>false</code>.\n   *\n   * @param {Window} window - the window to be checked\n   * @return {boolean} <code>true</code> if <code>window</code> is closeable; otherwise <code>false</code>.\n   * @public\n   */\n  isCloseable(window) {\n    return false;\n  }\n\n}\n\nmodule.exports = WindowService;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst WindowService = require('europa-core/src/service/window/WindowService');\n\n/**\n * An implementation of {@link WindowService} intended for use within a browser environment.\n *\n * @public\n */\nclass BrowserWindowService extends WindowService {\n\n  /**\n   * @override\n   */\n  getDefaultBaseUri() {\n    return window.document.baseURI;\n  }\n\n  /**\n   * @override\n   */\n  getWindow(baseUri) {\n    return window;\n  }\n\n}\n\nmodule.exports = BrowserWindowService;\n","/*\n * Copyright (C) 2018 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nconst Europa = require('europa-core');\n\nconst BrowserWindowService = require('./service/window/BrowserWindowService');\n\nEuropa.use(new BrowserWindowService());\n\nmodule.exports = Europa;\n"],"names":["Utilities","object","callback","context","key","hasOwn","call","name","Object","prototype","hasOwnProperty","string","times","padding","i","replacements","replacementsRegExp","forOwn","value","RegExp","Conversion","europa","options","atLeft","atNoWhiteSpace","atParagraph","buffer","inCodeBlock","inOrderedList","inPreformattedBlock","last","left","listDepth","listIndex","_document","document","_element","_tagName","_window","window","append","clean","replace","test","element","tagName","toLowerCase","DOMUtilities","style","getComputedStyle","getPropertyValue","Option","defaultValue","_defaultValue","OptionParser","some","option","result","forEach","Plugin","conversion","ServiceManager","_services","service","Error","plugins","serviceManager","Europa","plugin","getTagNames","tag","setService","getName","_options","getService","getDefaultBaseUri","parse","html","root","createElement","innerHTML","wrapper","contains","display","appendChild","body","beforeAll","convertElement","afterAll","removeChild","trim","nodeType","Node","ELEMENT_NODE","isVisible","convertChildren","before","convert","childNodes","length","after","TEXT_NODE","nodeValue","output","closeWindow","getWindow","baseUri","AnchorPlugin","anchors","anchorMap","href","absolute","getAttribute","title","index","inline","push","register","BlockQuotePlugin","previousLeft","appendParagraph","BreakPlugin","CodePlugin","skipped","previousInCodeBlock","DefinitionTermPlugin","DetailsPlugin","hasAttribute","summary","querySelector","EmphasisPlugin","EmptyPlugin","FramePlugin","previousWindow","contentWindow","HeadingPlugin","level","parseInt","match","heading","HorizontalRulePlugin","ImagePlugin","images","imageMap","source","src","alternativeText","ListItemPlugin","leftPad","OrderedListPlugin","previousInOrderedList","previousListIndex","ParagraphPlugin","PreformattedPlugin","previousInPreformattedBlock","QuotePlugin","StrongPlugin","UnorderedListPlugin","Service","WindowService","isCloseable","close","BrowserWindowService","baseURI","use"],"mappings":"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"}