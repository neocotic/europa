{"version":3,"file":"europa.min.js","sources":["../node_modules/nevis/src/extend.js","../node_modules/nevis/src/nevis.js","../node_modules/europa-core/src/util/Utilities.js","../node_modules/europa-core/src/Conversion.js","../node_modules/europa-core/src/util/DOMUtilities.js","../node_modules/europa-core/src/option/Option.js","../node_modules/europa-core/src/option/OptionParser.js","../node_modules/europa-core/src/plugin/Plugin.js","../node_modules/europa-core/src/Europa.js","../node_modules/europa-core/src/service/ServiceManager.js","../node_modules/europa-core/src/plugin/predefined/AnchorPlugin.js","../node_modules/europa-core/src/plugin/predefined/BlockQuotePlugin.js","../node_modules/europa-core/src/plugin/predefined/BreakPlugin.js","../node_modules/europa-core/src/plugin/predefined/CodePlugin.js","../node_modules/europa-core/src/plugin/predefined/DefinitionTermPlugin.js","../node_modules/europa-core/src/plugin/predefined/DetailsPlugin.js","../node_modules/europa-core/src/plugin/predefined/EmphasisPlugin.js","../node_modules/europa-core/src/plugin/predefined/EmptyPlugin.js","../node_modules/europa-core/src/plugin/predefined/FramePlugin.js","../node_modules/europa-core/src/plugin/predefined/HeadingPlugin.js","../node_modules/europa-core/src/plugin/predefined/HorizontalRulePlugin.js","../node_modules/europa-core/src/plugin/predefined/ImagePlugin.js","../node_modules/europa-core/src/plugin/predefined/ListItemPlugin.js","../node_modules/europa-core/src/plugin/predefined/OrderedListPlugin.js","../node_modules/europa-core/src/plugin/predefined/ParagraphPlugin.js","../node_modules/europa-core/src/plugin/predefined/PreformattedPlugin.js","../node_modules/europa-core/src/plugin/predefined/QuotePlugin.js","../node_modules/europa-core/src/plugin/predefined/StrongPlugin.js","../node_modules/europa-core/src/plugin/predefined/UnorderedListPlugin.js","../node_modules/europa-core/index.js","../node_modules/europa-core/src/service/Service.js","../node_modules/europa-core/src/service/window/WindowService.js","../src/service/window/BrowserWindowService.js","../src/Europa.js"],"sourcesContent":["/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\n/**\n * A bare-bones constructor for surrogate prototype swapping.\n *\n * @private\n * @constructor\n */\nvar Constructor = /* istanbul ignore next */ function() {};\n/**\n * A reference to <code>Object.prototype.hasOwnProperty</code>.\n *\n * @private\n * @type {Function}\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * A reference to <code>Array.prototype.slice</code>.\n *\n * @private\n * @type {Function}\n */\nvar slice = Array.prototype.slice;\n\n/**\n * Creates an object which inherits the given <code>prototype</code>.\n *\n * Optionally, the created object can be extended further with the specified <code>properties</code>.\n *\n * @param {Object} prototype - the prototype to be inherited by the created object\n * @param {Object} [properties] - the optional properties to be extended by the created object\n * @return {Object} The newly created object.\n * @private\n */\nfunction createObject(prototype, properties) {\n  var result;\n  /* istanbul ignore next */\n  if (typeof Object.create === 'function') {\n    result = Object.create(prototype);\n  } else {\n    Constructor.prototype = prototype;\n    result = new Constructor();\n    Constructor.prototype = null;\n  }\n\n  if (properties) {\n    extendObject(true, result, properties);\n  }\n\n  return result;\n}\n\n/**\n * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n * <code>statics</code> provided.\n *\n * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n * instead. The class name may also be used string representation for instances of the child constructor (via\n * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n *\n * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n * constructor which only calls the super constructor will be used instead.\n *\n * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n *\n * @param {string} [name=this.class_] - the class name to be used for the child constructor\n * @param {Function} [constructor] - the constructor for the child\n * @param {Object} [prototype] - the prototype properties to be defined for the child\n * @param {Object} [statics] - the static properties to be defined for the child\n * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n * @public\n */\nfunction extend(name, constructor, prototype, statics) {\n  var superConstructor = this;\n\n  if (typeof name !== 'string') {\n    statics = prototype;\n    prototype = constructor;\n    constructor = name;\n    name = null;\n  }\n\n  if (typeof constructor !== 'function') {\n    statics = prototype;\n    prototype = constructor;\n    constructor = function() {\n      return superConstructor.apply(this, arguments);\n    };\n  }\n\n  extendObject(false, constructor, superConstructor, statics);\n\n  constructor.prototype = createObject(superConstructor.prototype, prototype);\n  constructor.prototype.constructor = constructor;\n\n  constructor.class_ = name || superConstructor.class_;\n  constructor.super_ = superConstructor;\n\n  return constructor;\n}\n\n/**\n * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.\n *\n * if any source is <code>null</code> it will be ignored.\n *\n * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto\n * <code>target</code>; otherwise <code>false</code>\n * @param {Object} target - the target object which should be extended\n * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>\n * @return {void}\n * @private\n */\nfunction extendObject(own, target, sources) {\n  sources = slice.call(arguments, 2);\n\n  var property;\n  var source;\n\n  for (var i = 0, length = sources.length; i < length; i++) {\n    source = sources[i];\n\n    for (property in source) {\n      if (!own || hasOwnProperty.call(source, property)) {\n        target[property] = source[property];\n      }\n    }\n  }\n}\n\nmodule.exports = extend;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar extend = require('./extend');\n\n/**\n * The base class from which all others should extend.\n *\n * @public\n * @constructor\n */\nfunction Nevis() {}\nNevis.class_ = 'Nevis';\nNevis.super_ = Object;\n\n/**\n * Extends the constructor to which this method is associated with the <code>prototype</code> and/or\n * <code>statics</code> provided.\n *\n * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special\n * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used\n * instead. The class name may also be used string representation for instances of the child constructor (via\n * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.\n *\n * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple\n * constructor which only calls the super constructor will be used instead.\n *\n * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.\n *\n * @param {string} [name=this.class_] - the class name to be used for the child constructor\n * @param {Function} [constructor] - the constructor for the child\n * @param {Object} [prototype] - the prototype properties to be defined for the child\n * @param {Object} [statics] - the static properties to be defined for the child\n * @return {Function} The child <code>constructor</code> provided or the one created if none was given.\n * @public\n * @static\n * @memberof Nevis\n */\nNevis.extend = extend;\n\nmodule.exports = Nevis;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\n/**\n * Contains utility methods that are useful throughout the library.\n *\n * @public\n * @class\n * @extends Nevis\n */\nvar Utilities = Nevis.extend(null, {\n\n  /**\n   * Iterates over own (not inherited) enumerable properties on the specified <code>object</code>.\n   *\n   * Nothing happens if <code>object</code> is <code>null</code>.\n   *\n   * @param {Object} object - the object whose own properties are to be iterated over\n   * @param {Utilities~ForOwnCallback} callback - the function to be called with the value and key for each own property\n   * on <code>object</code>\n   * @param {Object} [context] - the value to use <code>this</code> when executing <code>callback</code>\n   * @return {void}\n   * @public\n   * @static\n   * @memberof Utilities\n   */\n  forOwn: function(object, callback, context) {\n    if (!object) {\n      return;\n    }\n\n    for (var key in object) {\n      if (Utilities.hasOwn(object, key)) {\n        callback.call(context, object[key], key, object);\n      }\n    }\n  },\n\n  /**\n   * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own\n   * (not inherited) property.\n   *\n   * @param {Object} object - the object on which the property is to be checked\n   * @param {string} name - the name of the property to be checked\n   * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.\n   * @public\n   * @static\n   * @memberof Utilities\n   */\n  hasOwn: function(object, name) {\n    return Object.prototype.hasOwnProperty.call(object, name);\n  },\n\n  /**\n   * Left pads the <code>string</code> provided with the given padding string for the specified number of\n   * <code>times</code>.\n   *\n   * @param {string} [string=\"\"] - the string to be padded\n   * @param {number} [times=0] - the number of times to pad <code>string</code>\n   * @param {string} [padding=\" \"] - the padding string\n   * @return {string} The padded <code>string</code>.\n   * @public\n   * @static\n   * @memberof Utilities\n   */\n  leftPad: function(string, times, padding) {\n    if (string == null) {\n      string = '';\n    }\n    if (times == null) {\n      times = 0;\n    }\n    if (padding == null) {\n      padding = ' ';\n    }\n    if (!padding) {\n      return string;\n    }\n\n    for (var i = 0; i < times; i++) {\n      string = padding + string;\n    }\n\n    return string;\n  }\n\n});\n\nmodule.exports = Utilities;\n\n/**\n * Called for each own enumerable property on <code>object</code>.\n *\n * @callback Utilities~ForOwnCallback\n * @param {*} value - the value of the property\n * @param {string} key - the name of the property\n * @param {Object} object - the object to which the property belongs\n * @return {void}\n */\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\nvar Utilities = require('./util/Utilities');\n\n/**\n * Contains contextual information for a single conversion process.\n *\n * @param {Europa} europa - the {@link Europa} instance responsible for this conversion\n * @param {Europa~Options} options - the options to be used\n * @public\n * @class\n * @extends Nevis\n */\nvar Conversion = Nevis.extend(function(europa, options) {\n  /**\n   * The {@link Europa} instance responsible for this {@link Conversion}.\n   *\n   * @public\n   * @type {Europa}\n   * @memberof Conversion#\n   */\n  this.europa = europa;\n\n  /**\n   * The options for this {@link Conversion}.\n   *\n   * @public\n   * @type {Europa~Options}\n   * @memberof Conversion#\n   */\n  this.options = options;\n\n  /**\n   * Whether the buffer is at the start of the current line.\n   *\n   * @public\n   * @type {boolean}\n   * @memberof Conversion#\n   */\n  this.atLeft = true;\n\n  /**\n   * Whether any white space should be removed from the start of the next output.\n   *\n   * @public\n   * @type {boolean}\n   * @memberof Conversion#\n   */\n  this.atNoWhiteSpace = true;\n\n  /**\n   * Whether the buffer is at the start of a paragraph.\n   *\n   * @public\n   * @type {boolean}\n   * @memberof Conversion#\n   */\n  this.atParagraph = true;\n\n  /**\n   * The conversion output buffer to which the Markdown will be written.\n   *\n   * @public\n   * @type {string}\n   * @memberof Conversion#\n   */\n  this.buffer = '';\n\n  /**\n   * The context for this {@link Conversion}.\n   *\n   * @public\n   * @type {Object.<string, *>}\n   * @memberof Conversion#\n   */\n  this.context = {};\n\n  /**\n   * Whether the buffer is currently within a code block.\n   *\n   * @public\n   * @type {boolean}\n   * @memberof Conversion#\n   */\n  this.inCodeBlock = false;\n\n  /**\n   * Whether the buffer is currently within an ordered list.\n   *\n   * @public\n   * @type {boolean}\n   * @memberof Conversion#\n   */\n  this.inOrderedList = false;\n\n  /**\n   * Whether the buffer is currently within a preformatted block.\n   *\n   * @public\n   * @type {boolean}\n   * @memberof Conversion#\n   */\n  this.inPreformattedBlock = false;\n\n  /**\n   * The last string to be output next to the buffer.\n   *\n   * @public\n   * @type {string}\n   * @memberof Conversion#\n   */\n  this.last = null;\n\n  /**\n   * The start of the current line.\n   *\n   * @public\n   * @type {string}\n   * @memberof Conversion#\n   */\n  this.left = '\\n';\n\n  /**\n   * The depth of nested lists.\n   *\n   * @public\n   * @type {number}\n   * @memberof Conversion#\n   */\n  this.listDepth = 0;\n\n  /**\n   * The one-based index for the current list item within the current list.\n   *\n   * @public\n   * @type {number}\n   * @memberof Conversion#\n   */\n  this.listIndex = 1;\n\n  this._document = europa.document;\n  this._element = null;\n  this._tagName = null;\n  this._window = europa.window;\n}, {\n\n  /**\n   * Appends the last output string to the buffer and then queues the specified <code>string</code> to be output.\n   *\n   * @param {string} string - the string to be appended\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   * @memberof Conversion#\n   */\n  append: function(string) {\n    if (this.last != null) {\n      this.buffer += this.last;\n    }\n\n    this.last = string;\n\n    return this;\n  },\n\n  /**\n   * Appends a paragraph to the output buffer.\n   *\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   * @memberof Conversion#\n   */\n  appendParagraph: function() {\n    if (this.atParagraph) {\n      return this;\n    }\n\n    if (!this.atLeft) {\n      this.append(this.left);\n\n      this.atLeft = true;\n    }\n\n    this.append(this.left);\n\n    this.atNoWhiteSpace = true;\n    this.atParagraph = true;\n\n    return this;\n  },\n\n  /**\n   * Outputs the specified <code>string</code> to the buffer.\n   *\n   * Optionally, <code>string</code> can be \"cleaned\" before being output. Doing so will replace any certain special\n   * characters as well as some white space.\n   *\n   * @param {string} string - the string to be output\n   * @param {boolean} [clean=false] - <code>true</code> to clean <code>string</code>; otherwise <code>false</code>\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   * @memberof Conversion#\n   */\n  output: function(string, clean) {\n    if (!string) {\n      return this;\n    }\n\n    string = string.replace(/\\r\\n/g, '\\n');\n\n    if (clean) {\n      string = string.replace(/\\n([ \\t]*\\n)+/g, '\\n')\n        .replace(/\\n[ \\t]+/g, '\\n')\n        .replace(/[ \\t]+/g, ' ');\n\n      Utilities.forOwn(Conversion.replacements, function(value, key) {\n        string = string.replace(Conversion.replacementsRegExp[key], value);\n      });\n    }\n\n    if (!this.inPreformattedBlock) {\n      if (this.atNoWhiteSpace) {\n        string = string.replace(/^[ \\t\\n]+/, '');\n      } else if (/^[ \\t]*\\n/.test(string)) {\n        string = string.replace(/^[ \\t\\n]+/, '\\n');\n      } else {\n        string = string.replace(/^[ \\t]+/, ' ');\n      }\n    }\n\n    if (!string) {\n      return this;\n    }\n\n    this.atLeft = /\\n$/.test(string);\n    this.atNoWhiteSpace = /[ \\t\\n]$/.test(string);\n    this.atParagraph = /\\n{2}$/.test(string);\n\n    return this.append(string.replace(/\\n/g, this.left));\n  },\n\n  /**\n   * Replaces the start of the current line with the <code>string</code> provided.\n   *\n   * @param {string} string - the string to replace the start of the current line\n   * @return {Conversion} A reference to this {@link Conversion} for chaining purposes.\n   * @public\n   * @memberof Conversion#\n   */\n  replaceLeft: function(string) {\n    if (!this.atLeft) {\n      this.append(this.left.replace(/[ ]{2,4}$/, string));\n\n      this.atLeft = true;\n      this.atNoWhiteSpace = true;\n      this.atParagraph = true;\n    } else if (this.last) {\n      this.last = this.last.replace(/[ ]{2,4}$/, string);\n    }\n\n    return this;\n  }\n\n}, {\n\n  /**\n   * A map of special characters and their replacements.\n   *\n   * @public\n   * @static\n   * @type {Object.<string, string>}\n   * @memberof Conversion\n   */\n  replacements: {\n    '\\\\\\\\': '\\\\\\\\',\n    '\\\\[': '\\\\[',\n    '\\\\]': '\\\\]',\n    '>': '\\\\>',\n    '_': '\\\\_',\n    '\\\\*': '\\\\*',\n    '`': '\\\\`',\n    '#': '\\\\#',\n    '([0-9])\\\\.(\\\\s|$)': '$1\\\\.$2',\n    '\\u00a9': '(c)',\n    '\\u00ae': '(r)',\n    '\\u2122': '(tm)',\n    '\\u00a0': ' ',\n    '\\u00b7': '\\\\*',\n    '\\u2002': ' ',\n    '\\u2003': ' ',\n    '\\u2009': ' ',\n    '\\u2018': '\\'',\n    '\\u2019': '\\'',\n    '\\u201c': '\"',\n    '\\u201d': '\"',\n    '\\u2026': '...',\n    '\\u2013': '--',\n    '\\u2014': '---'\n  },\n\n  /**\n   * A map of special characters and the regular expression used to identify them.\n   *\n   * @public\n   * @static\n   * @type {Object.<string, RegExp>}\n   * @memberof Conversion\n   */\n  replacementsRegExp: {}\n\n});\n\nObject.defineProperties(Conversion.prototype, {\n\n  document: {\n    /**\n     * Returns the current document for this {@link Conversion}.\n     *\n     * This may not be the same document as is associated with the {@link Europa} instance as this document may be\n     * nested (e.g. a frame).\n     *\n     * @return {Document} The current document.\n     * @public\n     * @memberof Conversion#\n     * @alias document\n     */\n    get: function() {\n      return this._document;\n    }\n  },\n\n  element: {\n    /**\n     * Returns the current element for this {@link Conversion}.\n     *\n     * @return {Element} The current element.\n     * @public\n     * @memberof Conversion#\n     * @alias element\n     */\n    get: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets the current element for this {@link Conversion} to <code>element</code>.\n     *\n     * @param {Element} element - the current element to be set\n     * @return {void}\n     * @public\n     * @memberof Conversion#\n     * @alias element\n     */\n    set: function(element) {\n      this._element = element;\n      this._tagName = element && element.tagName ? element.tagName.toLowerCase() : null;\n    }\n  },\n\n  tagName: {\n    /**\n     * Returns the name of the tag for the current element for this {@link Conversion}.\n     *\n     * The tag name will always be in lower case, when available.\n     *\n     * @return {string} The current element's tag name.\n     * @public\n     * @memberof Conversion#\n     * @alias tagName\n     */\n    get: function() {\n      return this._tagName;\n    }\n  },\n\n  window: {\n    /**\n     * Returns the current window for this {@link Conversion}.\n     *\n     * This may not be the same window as is associated with the {@link Europa} instance as this window may be nested\n     * (e.g. a frame).\n     *\n     * @return {Window} The current window.\n     * @public\n     * @memberof Conversion#\n     * @alias window\n     */\n    get: function() {\n      return this._window;\n    },\n\n    /**\n     * Sets the current window for this {@link Conversion} to <code>window</code>.\n     *\n     * This may not be the same window as is associated with the {@link Europa} instance as this window may be nested\n     * (e.g. a frame).\n     *\n     * @param {Window} window - the window to be set\n     * @return {void}\n     * @public\n     * @memberof Conversion#\n     * @alias window\n     */\n    set: function(window) {\n      this._window = window;\n      this._document = window ? window.document : null;\n    }\n  }\n\n});\n\nUtilities.forOwn(Conversion.replacements, function(value, key) {\n  Conversion.replacementsRegExp[key] = new RegExp(key, 'g');\n});\n\nmodule.exports = Conversion;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\n/**\n * Contains utility methods that are useful when dealing with the DOM.\n *\n * @public\n * @class\n * @extends Nevis\n */\nvar DOMUtilities = Nevis.extend(null, {\n\n  /**\n   * Checks whether the specified <code>element</code> is currently visible using the <code>window</code> provided.\n   *\n   * This is not a very sophisticated check and could easily be mistaken, but it should catch a lot of the most simple\n   * cases.\n   *\n   * @param {Element} element - the element whose visibility is to be checked\n   * @param {Window} window - the window to be used\n   * @return {boolean} <code>true</code> if <code>element</code> is visible; otherwise <code>false</code>.\n   * @public\n   * @static\n   * @memberof DOMUtilities\n   */\n  isVisible: function(element, window) {\n    var style = window.getComputedStyle(element);\n\n    return style.getPropertyValue('display') !== 'none' && style.getPropertyValue('visibility') !== 'hidden';\n  }\n\n});\n\nmodule.exports = DOMUtilities;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\n/**\n * Defines an available option.\n *\n * If <code>defaultValue</code> is a function, it will be called if/when needed and the return value will be used as the\n * default value. If the default value is to be a function itself, then <code>defaultValue</code> must return that\n * function.\n *\n * @param {string} name - the name to be used\n * @param {*} [defaultValue] - the default value to be used\n * @public\n * @class\n * @extends Nevis\n */\nvar Option = Nevis.extend(function(name, defaultValue) {\n  /**\n   * The name for this {@link Option}.\n   *\n   * @public\n   * @type {string}\n   * @memberof Option#\n   */\n  this.name = name;\n\n  this._defaultValue = defaultValue;\n});\n\nObject.defineProperty(Option.prototype, 'defaultValue', {\n  /**\n   * Returns the default value for this {@link Option}.\n   *\n   * @return {*} The default value.\n   * @public\n   * @memberof Option#\n   * @alias defaultValue\n   */\n  get: function() {\n    var defaultValue = this._defaultValue;\n\n    return typeof defaultValue === 'function' ? defaultValue.call(this) : defaultValue;\n  }\n});\n\nmodule.exports = Option;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\n/**\n * Manages multiple {@link Option} instances that are intended to be used by multiple implementations/instances.\n *\n * @param {Option[]} options - the options to be used\n * @public\n * @class\n * @extends Nevis\n */\nvar OptionParser = Nevis.extend(function(options) {\n  /**\n   * The available options for this {@link OptionParser}.\n   *\n   * @public\n   * @type {Option[]}\n   * @memberof OptionParser#\n   */\n  this.options = options;\n}, {\n\n  /**\n   * Returns whether an option with the specified <code>name</code> is available.\n   *\n   * @param {string} name - the name of the {@link Option} whose existence is to be checked\n   * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise\n   * <code>false</code>.\n   * @public\n   * @memberof OptionParser#\n   */\n  exists: function(name) {\n    return this.options.some(function(option) {\n      return option.name === name;\n    });\n  },\n\n  /**\n   * Parses the specified <code>options</code>, extracting only properties that match valid options and applying default\n   * values where required.\n   *\n   * @param {Object} [options] - the options to be parsed\n   * @return {Object.<string, *>} The parsed options.\n   * @public\n   * @memberof OptionParser#\n   */\n  parse: function(options) {\n    if (!options) {\n      options = {};\n    }\n\n    var result = {};\n\n    this.options.forEach(function(option) {\n      var name = option.name;\n      var value = options[name] != null ? options[name] : option.defaultValue;\n\n      result[name] = value;\n    });\n\n    return result;\n  }\n\n});\n\nmodule.exports = OptionParser;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\n/**\n * A plugin that can tap into multiple parts in the conversion process while being specific to only a sub-set of tags.\n *\n * @public\n * @class\n * @extends Nevis\n */\nvar Plugin = Nevis.extend({\n\n  /**\n   * Called after {@link Plugin#convert} <b>and</b> only once all children elements have been converted as well,\n   * provided they weren't skipped, and intended for tidying up after the conversion.\n   *\n   * <code>context</code> can be used to receive any state for a single element conversion from {@link Plugin#before}\n   * and {@link Plugin#convert}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @param {Object.<string, *>} context - the current context for this {@link Plugin}\n   * @return {void}\n   * @public\n   * @memberof Plugin#\n   */\n  after: function(conversion, context) {},\n\n  /**\n   * Called before any elements are converted and intended to setup this {@link Plugin} initially.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @return {void}\n   * @public\n   * @memberof Plugin#\n   */\n  afterAll: function(conversion) {},\n\n  /**\n   * Called immediately before {@link Plugin#convert} and intended for preparing this {@link Plugin} for conversion.\n   *\n   * <code>context</code> can be used to pass any state for a single element conversion to {@link Plugin#convert} and\n   * then to {@link Plugin#after}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @param {Object.<string, *>} context - the current context for this {@link Plugin}\n   * @return {void}\n   * @public\n   * @memberof Plugin#\n   */\n  before: function(conversion, context) {},\n\n  /**\n   * Called after all elements have been converted and intended to completing any steps for this {@link Plugin}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @return {void}\n   * @public\n   * @memberof Plugin#\n   */\n  beforeAll: function(conversion) {},\n\n  /**\n   * Converts the current element within the specified <code>conversion</code> which can be used to provide control over\n   * the conversion and returns whether the children of the element should be converted.\n   *\n   * <code>context</code> can be used to pass any state for a single element conversion from {@link Plugin#before} to\n   * {@link Plugin#after}.\n   *\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @param {Object.<string, *>} context - the current context for this {@link Plugin}\n   * @return {boolean} <code>true</code> if the children of the current element should be converted; otherwise\n   * <code>false</code>.\n   * @public\n   * @memberof Plugin#\n   */\n  convert: function(conversion, context) {\n    return true;\n  },\n\n  /**\n   * Returns the names of tags with which this {@link Plugin} should be registered to handle.\n   *\n   * @return {string[]} The names of supported tags.\n   * @public\n   * @memberof Plugin#\n   */\n  getTagNames: function() {\n    return [];\n  }\n\n});\n\nmodule.exports = Plugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\nvar Conversion = require('./Conversion');\nvar DOMUtilities = require('./util/DOMUtilities');\nvar Option = require('./option/Option');\nvar OptionParser = require('./option/OptionParser');\nvar Plugin = require('./plugin/Plugin');\nvar ServiceManager = require('./service/ServiceManager');\nvar Utilities = require('./util/Utilities');\n\nvar plugins = {};\nvar serviceManager = new ServiceManager();\n\n/**\n * Enables configuration of a HTML to Markdown converter that supports HTML strings and DOM elements.\n *\n * @param {Europa~Options} [options] - the options to be used\n * @public\n * @class\n * @extends Nevis\n */\nvar Europa = Nevis.extend(function(options) {\n  this._options = new OptionParser([\n    new Option('absolute', false),\n    new Option('baseUri', function() {\n      return serviceManager.getService('window').getDefaultBaseUri();\n    }),\n    new Option('inline', false)\n  ])\n  .parse(options);\n  this._window = null;\n}, {\n\n  /**\n   * Converts the specified <code>html</code> into Markdown based on the options configured for this {@link Europa}\n   * instance.\n   *\n   * <code>html</code> can either be an HTML string or a DOM element whose HTML contents are to be converted into\n   * Markdown.\n   *\n   * @param {Element|string} html - the HTML (or element whose inner HTML is) to be converted into Markdown\n   * @return {string} The Markdown converted from <code>html</code>.\n   * @public\n   * @memberof Europa#\n   */\n  convert: function(html) {\n    if (!html) {\n      return '';\n    }\n\n    var document = this.document;\n    var root;\n\n    if (typeof html === 'string') {\n      root = document.createElement('div');\n      root.innerHTML = html;\n    } else {\n      root = html;\n    }\n\n    var conversion = new Conversion(this, this._options);\n    var wrapper;\n\n    if (!document.contains(root)) {\n      wrapper = document.createElement('div');\n      wrapper.style.display = 'none';\n      wrapper.appendChild(root);\n\n      document.body.appendChild(wrapper);\n    }\n\n    try {\n      Utilities.forOwn(plugins, function(plugin) {\n        plugin.beforeAll(conversion);\n      });\n\n      this.convertElement(root, conversion);\n\n      Utilities.forOwn(plugins, function(plugin) {\n        plugin.afterAll(conversion);\n      });\n    } finally {\n      if (wrapper) {\n        document.body.removeChild(wrapper);\n\n        wrapper.removeChild(root);\n      }\n    }\n\n    return conversion.append('').buffer.trim();\n  },\n\n  /**\n   * Converts the specified <code>element</code> and it's children into Markdown using the <code>conversion</code>\n   * provided.\n   *\n   * Nothing happens if <code>element</code> is <code>null</code> or is invisible (simplified detection used).\n   *\n   * @param {Element} element - the element (along well as it's children) to be converted into Markdown\n   * @param {Conversion} conversion - the current {@link Conversion}\n   * @return {void}\n   * @public\n   * @memberof Europa#\n   */\n  convertElement: function(element, conversion) {\n    if (!element) {\n      return;\n    }\n\n    var convertChildren = false;\n    var window = this.window;\n    var context, i, plugin, value;\n\n    if (element.nodeType === window.Node.ELEMENT_NODE) {\n      if (!DOMUtilities.isVisible(element, window)) {\n        return;\n      }\n\n      conversion.element = element;\n\n      context = {};\n      plugin = plugins[conversion.tagName];\n      convertChildren = true;\n\n      if (plugin) {\n        plugin.before(conversion, context);\n        convertChildren = plugin.convert(conversion, context);\n      }\n\n      if (convertChildren) {\n        for (i = 0; i < element.childNodes.length; i++) {\n          this.convertElement(element.childNodes[i], conversion);\n        }\n      }\n\n      if (plugin) {\n        plugin.after(conversion, context);\n      }\n    } else if (element.nodeType === window.Node.TEXT_NODE) {\n      value = element.nodeValue || '';\n\n      if (conversion.inPreformattedBlock) {\n        conversion.output(value);\n      } else if (conversion.inCodeBlock) {\n        conversion.output(value.replace(/`/g, '\\\\`'));\n      } else {\n        conversion.output(value, true);\n      }\n    }\n  },\n\n  /**\n   * Releases the window used by this {@link Europa} instance.\n   *\n   * This allows closeable {@link WindowService} implementations to close the window and free up resources. However,\n   * this instance can and will simply retrieve another window from the {@link WindowService} the next time it is\n   * required (i.e. {@link Europa#convert} is called).\n   *\n   * @return {Europa} A reference to this {@link Europa} for chaining purposes.\n   * @public\n   * @memberof Europa#\n   */\n  release: function() {\n    if (this._window) {\n      serviceManager.getService('window').closeWindow(this._window);\n      this._window = null;\n    }\n\n    return this;\n  }\n\n}, {\n\n  /**\n   * A convient reference to {@link Plugin} exposed on {@link Europa} for cases where Europa Core is bundled.\n   *\n   * @public\n   * @static\n   * @type {Function}\n   * @memberof Europa\n   */\n  Plugin: Plugin,\n\n  /**\n   * Registers the specified <code>plugin</code> to be used by all {@link Europa} instances.\n   *\n   * If <code>plugin</code> declares support for a tag name which already has a {@link Plugin} registered for it,\n   * <code>plugin</code> will replace the previously registered plugin, but only for conflicting tag names.\n   *\n   * @param {Plugin} plugin - the {@link Plugin} to be registered\n   * @return {void}\n   * @public\n   * @static\n   * @memberof Europa\n   */\n  register: function(plugin) {\n    plugin.getTagNames().forEach(function(tag) {\n      plugins[tag] = plugin;\n    });\n  },\n\n  /**\n   * Configures the <code>service</code> provided to be used by all {@link Europa} instances.\n   *\n   * @param {Service} service - the {@link Service} to be configured\n   * @return {void}\n   * @throws {Error} If a {@link Service} has already been configured with the same name.\n   * @public\n   * @static\n   * @memberof Europa\n   */\n  use: function(service) {\n    serviceManager.setService(service.getName(), service);\n  }\n\n});\n\nObject.defineProperties(Europa.prototype, {\n\n  document: {\n    /**\n     * Returns the document to be used for HTML to Markdown conversion by this {@link Europa} instance.\n     *\n     * @return {Document} The document.\n     * @public\n     * @memberof Europa#\n     * @alias document\n     */\n    get: function() {\n      return this.window.document;\n    }\n  },\n\n  window: {\n    /**\n     * Returns the window to be used for HTML to Markdown conversion by this {@link Europa} instance.\n     *\n     * @return {Window} The window.\n     * @public\n     * @memberof Europa#\n     * @alias window\n     */\n    get: function() {\n      if (!this._window) {\n        this._window = serviceManager.getService('window').getWindow(this._options.baseUri);\n      }\n\n      return this._window;\n    }\n  }\n\n});\n\nmodule.exports = Europa;\n\n/**\n * The options used by {@link Europa}.\n *\n * @typedef {Object} Europa~Options\n * @property {boolean} [absolute=false] - Whether absolute URLS should be used for anchors/images.\n * @property {string} [baseUri] - The base URI for the window. This is ignored in environments where the base URI cannot\n * be changed.\n * @property {boolean} [inline=false] - Whether anchor/image URLs are to be inserted inline.\n */\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\n/**\n * A basic manager for {@link Service} implementations that are mapped to simple names.\n *\n * @public\n * @class\n * @extends Nevis\n */\nvar ServiceManager = Nevis.extend(function() {\n  this._services = {};\n}, {\n\n  /**\n   * Returns the {@link Service} being managed with the specified <code>name</code>.\n   *\n   * @param {string} name - the name of the {@link Service} to be returned\n   * @return {Service} The {@link Service} is being managed with <code>name</code>.\n   * @throws {Error} If no {@link Service} is being managed with <code>name</code>.\n   * @public\n   * @memberof ServiceManager#\n   */\n  getService: function(name) {\n    var service = this._services[name];\n    if (!service) {\n      throw new Error('Service is not being managed with name: ' + name);\n    }\n\n    return service;\n  },\n\n  /**\n   * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the\n   * <code>service</code> provided.\n   *\n   * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>\n   * @param {Service} service - the {@link Service} implementation to be managed\n   * @return {void}\n   * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.\n   * @public\n   * @memberof ServiceManager#\n   */\n  setService: function(name, service) {\n    if (this._services[name]) {\n      throw new Error('Service is already managed with name: ' + name);\n    }\n\n    if (service) {\n      this._services[name] = service;\n    }\n  }\n\n});\n\nmodule.exports = ServiceManager;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which extracts the URL from an anchor. Anchors without an <code>href</code> are treated as plain\n * text.\n *\n * If the <code>absolute</code> option is enabled, then the URL extracted from the anchor will be absolute. Otherwise,\n * the URL will be exactly as it is in the <code>href</code> attribute.\n *\n * If the <code>inline</code> option is enabled, then the URL (and any <code>title</code> on the anchor) will be\n * inserted immediately after the anchor contents (e.g. <code>[foo](/bar)</code>). Otherwise, all unique URL and title\n * combinations will be indexed (e.g. <code>[foo][anchor0]</code>) and the references will be output at the very end.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar AnchorPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    if (context.value != null) {\n      conversion.output(']' + context.value);\n    }\n  },\n\n  /**\n   * @override\n   */\n  afterAll: function(conversion) {\n    var anchors = conversion.context.anchors;\n    if (!anchors.length) {\n      return;\n    }\n\n    conversion.append('\\n\\n');\n\n    for (var i = 0; i < anchors.length; i++) {\n      conversion.append('[anchor' + i + ']: ' + anchors[i] + '\\n');\n    }\n  },\n\n  /**\n   * @override\n   */\n  beforeAll: function(conversion) {\n    conversion.context.anchorMap = {};\n    conversion.context.anchors = [];\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var element = conversion.element;\n    var options = conversion.options;\n    var href = options.absolute ? element.href : element.getAttribute('href');\n    if (!href) {\n      return true;\n    }\n\n    var anchorMap = conversion.context.anchorMap;\n    var anchors = conversion.context.anchors;\n    var title = element.getAttribute('title');\n    var value = title ? href + ' \"' + title + '\"' : href;\n    var index;\n\n    if (options.inline) {\n      context.value = '(' + value + ')';\n    } else {\n      index = anchorMap[value];\n      if (index == null) {\n        index = anchors.push(value) - 1;\n\n        anchorMap[value] = index;\n      }\n\n      context.value = '[anchor' + index + ']';\n    }\n\n    conversion.output('[');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'a' ];\n  }\n\n});\n\nEuropa.register(new AnchorPlugin());\n\nmodule.exports = AnchorPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents in a block quote.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar BlockQuotePlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.atLeft = false;\n    conversion.atParagraph = false;\n    conversion.left = context.previousLeft;\n\n    conversion.appendParagraph();\n  },\n\n  /**\n   * @override\n   */\n  before: function(conversion, context) {\n    context.previousLeft = conversion.left;\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var value = '> ';\n\n    conversion.left += value;\n\n    if (conversion.atParagraph) {\n      conversion.append(value);\n    } else {\n      conversion.appendParagraph();\n    }\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [\n      'blockquote',\n      'dd'\n    ];\n  }\n\n});\n\nEuropa.register(new BlockQuotePlugin());\n\nmodule.exports = BlockQuotePlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs an inline line break.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar BreakPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    conversion.append('  ' + conversion.left);\n\n    conversion.atLeft = true;\n    conversion.atNoWhiteSpace = true;\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'br' ];\n  }\n\n});\n\nEuropa.register(new BreakPlugin());\n\nmodule.exports = BreakPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents in a code block.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar CodePlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    if (!context.skipped) {\n      conversion.inCodeBlock = context.previousInCodeBlock;\n\n      conversion.output('`');\n    }\n  },\n\n  /**\n   * @override\n   */\n  before: function(conversion, context) {\n    context.previousInCodeBlock = conversion.inCodeBlock;\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    if (conversion.inPreformattedBlock) {\n      context.skipped = true;\n    } else {\n      conversion.output('`');\n\n      conversion.inCodeBlock = true;\n    }\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [\n      'code',\n      'kbd',\n      'samp'\n    ];\n  }\n\n});\n\nEuropa.register(new CodePlugin());\n\nmodule.exports = CodePlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a definition term as strong text.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar DefinitionTermPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.output('**');\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    conversion.appendParagraph();\n\n    conversion.output('**');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'dt' ];\n  }\n\n});\n\nEuropa.register(new DefinitionTermPlugin());\n\nmodule.exports = DefinitionTermPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a details section.\n *\n * If the details has an <code>open</code> attribute then all of its children are converted. Otherwise, only the nested\n * <code>summary</code>, if any, will be converted.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar DetailsPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var element = conversion.element;\n\n    conversion.appendParagraph();\n\n    if (element.hasAttribute('open')) {\n      return true;\n    }\n\n    var summary = element.querySelector('summary');\n    conversion.europa.convertElement(summary, conversion);\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'details' ];\n  }\n\n});\n\nEuropa.register(new DetailsPlugin());\n\nmodule.exports = DetailsPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs as emphasised text.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar EmphasisPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.output('_');\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    conversion.output('_');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [\n      'cite',\n      'dfn',\n      'em',\n      'i',\n      'u',\n      'var'\n    ];\n  }\n\n});\n\nEuropa.register(new EmphasisPlugin());\n\nmodule.exports = EmphasisPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which simply ensures that no children elements are converted.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar EmptyPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [\n      'applet',\n      'area',\n      'audio',\n      'button',\n      'canvas',\n      'datalist',\n      'embed',\n      'head',\n      'input',\n      'map',\n      'menu',\n      'meter',\n      'noframes',\n      'noscript',\n      'object',\n      'optgroup',\n      'option',\n      'param',\n      'progress',\n      'rp',\n      'rt',\n      'ruby',\n      'script',\n      'select',\n      'style',\n      'textarea',\n      'title',\n      'video'\n    ];\n  }\n\n});\n\nEuropa.register(new EmptyPlugin());\n\nmodule.exports = EmptyPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents of nested frame.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar FramePlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.window = context.previousWindow;\n  },\n\n  /**\n   * @override\n   */\n  before: function(conversion, context) {\n    context.previousWindow = conversion.window;\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var window = conversion.element.contentWindow;\n\n    if (window) {\n      conversion.window = window;\n\n      conversion.europa.convertElement(window.document.body, conversion);\n    }\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'frame', 'iframe' ];\n  }\n\n});\n\nEuropa.register(new FramePlugin());\n\nmodule.exports = FramePlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a heading of various levels.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar HeadingPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var level = parseInt(conversion.tagName.match(/([1-6])$/)[1], 10);\n\n    conversion.appendParagraph();\n\n    var heading = '';\n    for (var i = 0; i < level; i++) {\n      heading += '#';\n    }\n\n    conversion.output(heading + ' ');\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [\n      'h1',\n      'h2',\n      'h3',\n      'h4',\n      'h5',\n      'h6'\n    ];\n  }\n\n});\n\nEuropa.register(new HeadingPlugin());\n\nmodule.exports = HeadingPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a horizontal rule.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar HorizontalRulePlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    conversion\n      .appendParagraph()\n      .output('---')\n      .appendParagraph();\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'hr' ];\n  }\n\n});\n\nEuropa.register(new HorizontalRulePlugin());\n\nmodule.exports = HorizontalRulePlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which extracts the URL from an image.\n *\n * If the <code>absolute</code> option is enabled, then the URL extracted from the image will be absolute. Otherwise,\n * the URL will be exactly as it is in the <code>src</code> attribute.\n *\n * If the <code>inline</code> option is enabled, then the URL will be inserted immediately after the <code>alt</code> on\n * the image (e.g. <code>![foo](/bar.png)</code>). Otherwise, all unique URLs will be indexed\n * (e.g. <code>![foo][image0]</code>) and the references will be output at the very end.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar ImagePlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  afterAll: function(conversion) {\n    var images = conversion.context.images;\n    if (!images.length) {\n      return;\n    }\n\n    conversion.append('\\n\\n');\n\n    for (var i = 0; i < images.length; i++) {\n      conversion.append('[image' + i + ']: ' + images[i] + '\\n');\n    }\n  },\n\n  /**\n   * @override\n   */\n  beforeAll: function(conversion) {\n    conversion.context.imageMap = {};\n    conversion.context.images = [];\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var element = conversion.element;\n    var options = conversion.options;\n    var source = options.absolute ? element.src : element.getAttribute('src');\n    if (!source) {\n      return false;\n    }\n\n    var alternativeText = element.getAttribute('alt') || '';\n    var imageMap = conversion.context.imageMap;\n    var images = conversion.context.images;\n    var title = element.getAttribute('title');\n    var value = title ? source + ' \"' + title + '\"' : source;\n    var index;\n\n    if (options.inline) {\n      value = '(' + value + ')';\n    } else {\n      index = imageMap[value];\n      if (index == null) {\n        index = images.push(value) - 1;\n\n        imageMap[value] = index;\n      }\n\n      value = '[image' + index + ']';\n    }\n\n    conversion.output('![' + alternativeText + ']' + value);\n\n    return false;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'img' ];\n  }\n\n});\n\nEuropa.register(new ImagePlugin());\n\nmodule.exports = ImagePlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\nvar Utilities = require('../../util/Utilities');\n\n/**\n * A {@link Plugin} which outputs a list item. The prefix for the list item will vary depending on what type of list the\n * item is contained within.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar ListItemPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var value = conversion.inOrderedList ? conversion.listIndex++ + '. ' : '* ';\n\n    if (!conversion.atLeft) {\n      conversion.append(conversion.left.replace(/[ ]{2,4}$/, '\\n'));\n\n      conversion.atLeft = true;\n      conversion.atNoWhiteSpace = true;\n      conversion.atParagraph = true;\n    } else if (conversion.last) {\n      conversion.last = conversion.last.replace(/[ ]{2,4}$/, '\\n');\n    }\n\n    conversion.append(Utilities.leftPad(value, (conversion.listDepth - 1) * 2));\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'li' ];\n  }\n\n});\n\nEuropa.register(new ListItemPlugin());\n\nmodule.exports = ListItemPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs an ordered list.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar OrderedListPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.inOrderedList = context.previousInOrderedList;\n    conversion.listIndex = context.previousListIndex;\n    conversion.listDepth--;\n  },\n\n  /**\n   * @override\n   */\n  before: function(conversion, context) {\n    context.previousInOrderedList = conversion.inOrderedList;\n    context.previousListIndex = conversion.listIndex;\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    if (conversion.listDepth === 0) {\n      conversion.appendParagraph();\n    }\n\n    conversion.inOrderedList = true;\n    conversion.listIndex = 1;\n    conversion.listDepth++;\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'ol' ];\n  }\n\n});\n\nEuropa.register(new OrderedListPlugin());\n\nmodule.exports = OrderedListPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs a paragraph.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar ParagraphPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    conversion.appendParagraph();\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [\n      'address',\n      'article',\n      'aside',\n      'div',\n      'fieldset',\n      'footer',\n      'header',\n      'nav',\n      'p',\n      'section'\n    ];\n  }\n\n});\n\nEuropa.register(new ParagraphPlugin());\n\nmodule.exports = ParagraphPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs the contents in a preformatted block.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar PreformattedPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.atLeft = false;\n    conversion.atParagraph = false;\n    conversion.inPreformattedBlock = context.previousInPreformattedBlock;\n    conversion.left = context.previousLeft;\n\n    conversion.appendParagraph();\n  },\n\n  /**\n   * @override\n   */\n  before: function(conversion, context) {\n    context.previousInPreformattedBlock = conversion.inPreformattedBlock;\n    context.previousLeft = conversion.left;\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    var value = '    ';\n\n    conversion.left += value;\n\n    if (conversion.atParagraph) {\n      conversion.append(value);\n    } else {\n      conversion.appendParagraph();\n    }\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'pre' ];\n  }\n\n});\n\nEuropa.register(new PreformattedPlugin());\n\nmodule.exports = PreformattedPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs as quoted text.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar QuotePlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.output('\"');\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    conversion.output('\"');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'q' ];\n  }\n\n});\n\nEuropa.register(new QuotePlugin());\n\nmodule.exports = QuotePlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs as strong text.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar StrongPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.output('**');\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    conversion.output('**');\n\n    conversion.atNoWhiteSpace = true;\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [\n      'b',\n      'strong'\n    ];\n  }\n\n});\n\nEuropa.register(new StrongPlugin());\n\nmodule.exports = StrongPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('../../Europa');\nvar Plugin = require('../Plugin');\n\n/**\n * A {@link Plugin} which outputs an unordered list.\n *\n * @public\n * @class\n * @extends Plugin\n */\nvar UnorderedListPlugin = Plugin.extend({\n\n  /**\n   * @override\n   */\n  after: function(conversion, context) {\n    conversion.inOrderedList = context.previousInOrderedList;\n    conversion.listIndex = context.previousListIndex;\n    conversion.listDepth--;\n  },\n\n  /**\n   * @override\n   */\n  before: function(conversion, context) {\n    context.previousInOrderedList = conversion.inOrderedList;\n    context.previousListIndex = conversion.listIndex;\n  },\n\n  /**\n   * @override\n   */\n  convert: function(conversion, context) {\n    if (conversion.listDepth === 0) {\n      conversion.appendParagraph();\n    }\n\n    conversion.inOrderedList = false;\n    conversion.listIndex = 1;\n    conversion.listDepth++;\n\n    return true;\n  },\n\n  /**\n   * @override\n   */\n  getTagNames: function() {\n    return [ 'ul' ];\n  }\n\n});\n\nEuropa.register(new UnorderedListPlugin());\n\nmodule.exports = UnorderedListPlugin;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('./src/Europa');\nrequire('./src/plugin/preset/default');\n\nmodule.exports = Europa;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Nevis = require('nevis/lite');\n\n/**\n * Defines a service contract that must be met by all implementations.\n *\n * @public\n * @class\n * @extends Nevis\n */\nvar Service = Nevis.extend({\n\n  /**\n   * Returns the name of this {@link Service}.\n   *\n   * @return {string} The service name.\n   * @public\n   * @abstract\n   * @memberof Service#\n   */\n  getName: function() {}\n\n});\n\nmodule.exports = Service;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Service = require('../Service');\n\n/**\n * A service used to retrieve the window object for converting HTML to Markdown and, optionally, to close it upon\n * destruction of the {@link Europa} instance. This can be useful to free up resources as/when required in an artificial\n * browser environment.\n *\n * @public\n * @class\n * @extends Service\n */\nvar WindowService = Service.extend({\n\n  /**\n   * Closes the specified <code>window</code> but only if this {@link WindowService} is closeable.\n   *\n   * @param {Window} window - the window to be closed\n   * @return {void}\n   * @public\n   * @memberof WindowService#\n   */\n  closeWindow: function(window) {\n    if (this.isCloseable(window)) {\n      window.close();\n    }\n  },\n\n  /**\n   * Returns the default base URI for windows provided by this {@link WindowService}.\n   *\n   * Implementations of {@link WindowService} <b>must</b> override this method with their own specific logic.\n   *\n   * @return {string} The default base URI.\n   * @public\n   * @abstract\n   * @memberof WindowService#\n   */\n  getDefaultBaseUri: function() {},\n\n  /**\n   * @override\n   */\n  getName: function() {\n    return 'window';\n  },\n\n  /**\n   * Returns a window to be used for converting HTML to Markdown using the base URI provided.\n   *\n   * It's important to note that the base URI cannot be changed in some environments, in which case <code>baseUri</code>\n   * will be ignored.\n   *\n   * Implementations of {@link WindowService} <b>must</b> override this method with their own specific logic.\n   *\n   * @param {string} baseUri - the base URI to be used\n   * @return {Window} The window.\n   * @public\n   * @abstract\n   * @memberof WindowService#\n   */\n  getWindow: function(baseUri) {},\n\n  /**\n   * Returns whether the specified <code>window</code> which was retrieved by this {@link WindowService} is closeable.\n   *\n   * The default implementation of this method will always return <code>false</code>.\n   *\n   * @param {Window} window - the window to be checked\n   * @return {boolean} <code>true</code> if <code>window</code> is closeable; otherwise <code>false</code>.\n   * @public\n   * @memberof WindowService#\n   */\n  isCloseable: function(window) {\n    return false;\n  }\n\n});\n\nmodule.exports = WindowService;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar WindowService = require('europa-core/src/service/window/WindowService');\n\n/**\n * An implementation of {@link WindowService} intended for use within a browser environment.\n *\n * @public\n * @class\n * @extends WindowService\n */\nvar BrowserWindowService = WindowService.extend({\n\n  /**\n   * @override\n   */\n  getDefaultBaseUri: function() {\n    return window.document.baseURI;\n  },\n\n  /**\n   * @override\n   */\n  getWindow: function(baseUri) {\n    return window;\n  }\n\n});\n\nmodule.exports = BrowserWindowService;\n","/*\n * Copyright (C) 2017 Alasdair Mercer, !ninja\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\n'use strict';\n\nvar Europa = require('europa-core');\n\nvar BrowserWindowService = require('./service/window/BrowserWindowService');\n\nEuropa.use(new BrowserWindowService());\n\nmodule.exports = Europa;\n"],"names":["createObject","prototype","properties","result","Object","create","Constructor","extendObject","extend","name","constructor","statics","superConstructor","this","apply","arguments","class_","super_","own","target","sources","property","source","i","length","slice","call","hasOwnProperty","Nevis","Array","Utilities","forOwn","object","callback","context","key","hasOwn","leftPad","string","times","padding","Conversion","europa","options","atLeft","atNoWhiteSpace","atParagraph","buffer","inCodeBlock","inOrderedList","inPreformattedBlock","last","left","listDepth","listIndex","_document","document","_element","_tagName","_window","window","append","appendParagraph","output","clean","replace","replacements","value","replacementsRegExp","test","replaceLeft","\\\\","\\[","\\]",">","_","\\*","`","#","([0-9])\\.(\\s|$)","©","®","™"," ","·"," "," "," ","‘","’","“","”","…","–","—","defineProperties","get","element","set","tagName","toLowerCase","RegExp","isVisible","style","getComputedStyle","getPropertyValue","Option","defaultValue","_defaultValue","defineProperty","exists","some","option","parse","forEach","after","conversion","afterAll","before","beforeAll","convert","getTagNames","plugins","serviceManager","_services","getService","service","Error","setService","Europa","_options","OptionParser","getDefaultBaseUri","html","root","createElement","innerHTML","wrapper","contains","display","appendChild","body","plugin","convertElement","removeChild","trim","convertChildren","nodeType","Node","ELEMENT_NODE","DOMUtilities","childNodes","TEXT_NODE","nodeValue","release","closeWindow","Plugin","register","tag","use","getName","getWindow","baseUri","AnchorPlugin","anchors","anchorMap","href","absolute","getAttribute","index","title","inline","push","BlockQuotePlugin","previousLeft","BreakPlugin","CodePlugin","skipped","previousInCodeBlock","DefinitionTermPlugin","DetailsPlugin","hasAttribute","summary","querySelector","EmphasisPlugin","EmptyPlugin","FramePlugin","previousWindow","contentWindow","HeadingPlugin","level","parseInt","match","heading","HorizontalRulePlugin","ImagePlugin","images","imageMap","src","alternativeText","ListItemPlugin","OrderedListPlugin","previousInOrderedList","previousListIndex","ParagraphPlugin","PreformattedPlugin","previousInPreformattedBlock","QuotePlugin","StrongPlugin","UnorderedListPlugin","isCloseable","close","baseURI","BrowserWindowService"],"mappings":"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"}